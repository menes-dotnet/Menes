name: auto_release
on: 
  pull_request:
    types: [closed]

env:
  # Customise this variable to choose which dependencies can be auto-merged
  AUTO_MERGE_PACKAGE_WILDCARD_EXPRESSIONS: |
    ["Endjin.*","Corvus.*"]

jobs:
  check_for_norelease_label:
    runs-on: ubuntu-latest
    outputs:
      no_release: ${{ steps.check_for_norelease_label.outputs.result }}
    steps:
    - id: check_for_norelease_label
      uses: actions/github-script@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
            const labels = await github.issues.listLabelsOnIssue({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              issue_number: context.payload.number
            });
            core.info("labels: " + JSON.stringify(labels.data))
            if ( labels.data.map(l => l.name).includes("no_release") ) {
              return true
            }
            return false

  check_for_open_prs:
    runs-on: ubuntu-latest
    needs: check_for_norelease_label
    if: |
      !needs.check_for_norelease_label.outputs.no_release
    outputs:
      no_open_prs: ${{ steps.watch_dependabot_prs.outputs.is_complete }}
    steps:
    - id: get_pr_list
      name: Get PRs
      uses: actions/github-script@v2
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const pulls = await github.pulls.list({
            owner: context.payload.repository.owner.login,
            repo: context.payload.repository.name,
            state: 'open',
            base: 'master'
          });
          return JSON.stringify(pulls.data.map(p=>p.title))
        result-encoding: string

    - name: Display pr_list
      run: |
        echo "pr_list : ${{ steps.get_pr_list.outputs.result }}"

    - id: watch_dependabot_prs
      name: Watch Dependabot PRs
      uses: endjin/pr-autoflow/actions/dependabot-pr-watcher@v1
      with:
        pr_titles: ${{ steps.get_pr_list.outputs.result }}
        package_wildcard_expressions: ${{ env.AUTO_MERGE_PACKAGE_WILDCARD_EXPRESSIONS }}
        max_semver_increment: minor
        verbose_mode: 'False'

  tag_for_release:
    runs-on: ubuntu-latest
    needs: check_for_open_prs
    if: |
      (needs.check_for_open_prs.outputs.no_open_prs == 'True')
    steps:
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '3.1.x'

    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Install GitVersion
      run: |
        dotnet tool install -g GitVersion.Tool --version 5.2.4
        echo "::add-path::/github/home/.dotnet/tools"    
    - name: Run GitVersion
      id: run_gitversion
      run: |
        pwsh -noprofile -c '(dotnet-gitversion | ConvertFrom-Json).psobject.properties | % { echo ("::set-output name={0}::{1}" -f $_.name, $_.value) }'

    - name: Generate token
      id: generate_token
      uses: tibdex/github-app-token@v1
      with:
        app_id: ${{ secrets.ENDJIN_BOT_APP_ID }}
        private_key: ${{ secrets.ENDJIN_BOT_PRIVATE_KEY }}

    # create the SemVer tag
    - uses: hole19/git-tag-action@master
      env:
        TAG: ${{ steps.run_gitversion.outputs.semver }}
        GITHUB_TOKEN: '${{ steps.generate_token.outputs.token }}'
