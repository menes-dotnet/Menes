name: approve_and_label
on: 
  pull_request:
    types: [opened, reopened]
    
env:
  # Customise this variable to choose which dependencies can be auto-merged
  AUTO_MERGE_PACKAGE_WILDCARD_EXPRESSIONS: |
    ["Endjin.*","Corvus.*"]

jobs:
  evaluate_dependabot_pr:
    runs-on: ubuntu-latest
    name: Parse Dependabot PR title
    outputs:
      dependency_name: ${{ steps.parse_dependabot_pr.outputs.dependency_name }}
      version_from: ${{ steps.parse_dependabot_pr.outputs.version_from }}
      version_to: ${{ steps.parse_dependabot_pr.outputs.version_to }}
      is_auto_merge_candidate: ${{ steps.parse_dependabot_pr.outputs.is_interesting_package }}
      semver_increment: ${{ steps.parse_dependabot_pr.outputs.semver_increment }}
    if: |
      (github.actor == 'dependabot[bot]' || github.actor == 'nektos/act') &&
      github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
      - name: Parse Dependabot PR title
        id: parse_dependabot_pr
        uses: endjin/pr-autoflow/actions/dependabot-pr-parser@v3
        with:
          pr_title: ${{ github.event.pull_request.title }}
          package_wildcard_expressions: ${{ env.AUTO_MERGE_PACKAGE_WILDCARD_EXPRESSIONS }}
      - name: debug
        run: |
          echo "dependency_name : ${{ steps.parse_dependabot_pr.outputs.dependency_name }}"
          echo "is_interesting_package : ${{ steps.parse_dependabot_pr.outputs.is_interesting_package }}"
          echo "semver_increment : ${{ steps.parse_dependabot_pr.outputs.semver_increment }}"
  approve_and_label:
    runs-on: ubuntu-latest
    needs: evaluate_dependabot_pr
    name: Approve and label
    if: |
      (github.actor == 'dependabot[bot]' || github.actor == 'nektos/act') &&
      github.event_name == 'pull_request'
    steps:
      - name: Show PR Details
        run: |
          echo "<------------------------------------------------>"
          echo "dependency_name : ${{needs.evaluate_dependabot_pr.outputs.dependency_name}}"
          echo "semver_increment     : ${{needs.evaluate_dependabot_pr.outputs.semver_increment}}"
          echo "auto_merge      : ${{needs.evaluate_dependabot_pr.outputs.is_auto_merge_candidate}}"
          echo "from_version    : ${{needs.evaluate_dependabot_pr.outputs.version_from}}"
          echo "to_version      : ${{needs.evaluate_dependabot_pr.outputs.version_to}}"
          echo "<------------------------------------------------>"
        shell: bash
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.ENDJIN_BOT_APP_ID }}
          private_key: ${{ secrets.ENDJIN_BOT_PRIVATE_KEY }}
      - name: Approve pull request
        if: |
          needs.evaluate_dependabot_pr.outputs.is_auto_merge_candidate == 'True' &&
          (needs.evaluate_dependabot_pr.outputs.semver_increment == 'minor' || needs.evaluate_dependabot_pr.outputs.semver_increment == 'patch')
        uses: andrewmusgrave/automatic-pull-request-review@0.0.2
        with:
          repo-token: '${{ steps.generate_token.outputs.token }}'
          event: APPROVE
          body: 'Thank you dependabot ðŸŽŠ'
      - name: 'Update PR body'
        if: |
          needs.evaluate_dependabot_pr.outputs.is_auto_merge_candidate == 'True' &&
          (needs.evaluate_dependabot_pr.outputs.semver_increment == 'minor' || needs.evaluate_dependabot_pr.outputs.semver_increment == 'patch')
        env: 
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
        uses: actions/github-script@v2
        with:
          github-token: '${{ steps.generate_token.outputs.token }}'
          script: |
            await github.pulls.update({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              pull_number: context.payload.pull_request.number,
              body: "Bumps '${{needs.evaluate_dependabot_pr.outputs.dependency_name}}' from ${{needs.evaluate_dependabot_pr.outputs.version_from}} to ${{needs.evaluate_dependabot_pr.outputs.version_to}}"
            })
      - name: 'Label with "autosquash"'
        if: |
          needs.evaluate_dependabot_pr.outputs.is_auto_merge_candidate == 'True' &&
          (needs.evaluate_dependabot_pr.outputs.semver_increment == 'minor' || needs.evaluate_dependabot_pr.outputs.semver_increment == 'patch')
        env: 
          GH_TOKEN: ${{ steps.generate_token.outputs.token }}
        uses: actions/github-script@v2
        with:
          github-token: '${{ steps.generate_token.outputs.token }}'
          script: |
            await github.issues.addLabels({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              issue_number: context.payload.pull_request.number,
              labels: ['autosquash']
            })
