openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
servers:
  - url: http://localhost:7071/api
paths:
  /pets/{petId}:
    parameters:
      - name: petId
        in: path
        required: true
        description: The id of the pet to retrieve
        schema:
          type: string
          default: "abcdefg"
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        '404':
          description: No pet with that ID
        default:
          description: unexpected error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /pets/{petId}/image:
    parameters:
      - name: petId
        in: path
        required: true
        description: The id of the pet to retrieve
        schema:
          type: string
    get:
      summary: Returns a picture for the pet
      operationId: getPetImage
      tags:
        - pets
      responses:
        '200':
          description: Expected response to a valid request
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
        '404':
          description: No pet with that ID
        default:
          description: unexpected error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /pets/{petId}/dogimage:
    parameters:
      - name: petId
        in: path
        required: true
        description: The id of the pet to retrieve
        schema:
          type: string
    get:
      summary: Returns a picture for the pet
      operationId: getDogImage
      tags:
        - pets
      responses:
        '200':
          description: Expected response to a valid request
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
        '404':
          description: No pet with that ID
        default:
          description: unexpected error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
components:
  schemas:
    Pet:
      properties:
        id:
          type: integer
          format: int64
        globalIdentifier:
          type: string
          format: guid
        name:
          type: string
        tag:
          type: string
          nullable: true
        size:
          type: string
        _links:
          $ref: "#/components/schemas/Links"

    Links:
      type: object
      additionalProperties: true
      example:
        self: { href: "/path/to/self" }
        friends:
          - { href: "/path/to/friend/1" }
          - { href: "/path/to/friend/2" }
    ProblemDetails:
      required:
        - status
        - detail
      properties:
        status:
          type: integer
          format: int32
        detail:
          type: string
        title:
          type: string
        instance:
          type: string
          format: url
        type: 
          type: string
          format: url
        validationErrors: 
          type: array
      additionalProperties: true