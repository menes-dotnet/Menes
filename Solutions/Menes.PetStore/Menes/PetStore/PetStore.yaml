openapi: "3.0.0"
info:
  version: 1.0.0
  title: Swagger Petstore
  license:
    name: MIT
servers:
  - url: http://localhost:7071
paths:
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - pets
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
            maximum: 100
            minimum: 1
        - name: continuationToken
          in: query
          description: The continuation token for a paged result
          required: false
          schema:
            type: string
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/hal+json:    
              schema:
                $ref: "#/components/schemas/PetList"
        default:
          description: unexpected error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
    post:
      summary: Create a pet
      operationId: createPets
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewPet"
      tags:
        - pets
      responses:
        '201':
          description: Null response
          headers:
            Location:
              description: A link to the canoncial uri for this element
              schema:
                type: string
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /longpets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetByLongId
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/Pet"
        '404':
          description: No pet with that ID
        default:
          description: unexpected error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /petsWithIdInHeader:
    get:
      summary: Info for a specific pet
      operationId: showPetByLongIdInHeader
      tags:
        - pets
      parameters:
        - name: X-PET-ID
          in: header
          required: true
          description: The id of the pet to retrieve
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/Pet"
        '404':
          description: No pet with that ID
        '400':
          description: Bad  request
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
        default:
          description: unexpected error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /globalpets/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetByGlobalId
      tags:
        - pets
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
            format: guid
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/Pet"
        '404':
          description: No pet with that ID
        default:
          description: unexpected error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /pets/{petId}:
    parameters:
      - name: petId
        in: path
        required: true
        description: The id of the pet to retrieve
        schema:
          type: string
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - pets
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/Pet"
          headers:
            ETag:
              schema:
                type: string
        '404':
          description: No pet with that ID
        default:
          description: unexpected error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /pets/{petId}/image:
    parameters:
      - name: petId
        in: path
        required: true
        description: The id of the pet to retrieve
        schema:
          type: string
    get:
      summary: Returns a picture for the pet
      operationId: petImage
      tags:
        - pets
      responses:
        '200':
          description: Expected response to a valid request
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
        '404':
          description: No pet with that ID
        default:
          description: unexpected error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /pets/{petId}/pocoimage:
    parameters:
      - name: petId
        in: path
        required: true
        description: The id of the pet to retrieve
        schema:
          type: string
    get:
      summary: Returns a picture for the pet, with the handler returning a raw stream rather than an OpenAPI response
      operationId: petImagePoco
      tags:
        - pets
      responses:
        '200':
          description: Expected response to a valid request
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
        '404':
          description: No pet with that ID
        '500':
          description: unexpected error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
    delete:
      summary: Deletes a pet
      operationId: deletePetById
      tags:
        - pets
      responses:
        '204':
          description: Expected response to a valid request
        '404':
          description: No pet with that ID
        default:
          description: unexpected error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
  /secretPet:
    get:
      summary: Info for the secret pet
      operationId: showSecretPet
      tags:
        - pets
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/hal+json:
              schema:
                $ref: "#/components/schemas/Pet"
        '401':
          description: Insufficient priveliges
        default:
          description: unexpected error
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/ProblemDetails"
components:
  schemas:
    NewPet:
      required:
        - id
        - name
        - size
        - tag
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
        size:
          type: string
          enum: ["small", "medium", "large"]

    Pet:
      anyOf:
      - $ref: '#/components/schemas/Resource'
      - type: object
        properties:
          id:
            type: integer
            format: int64
          globalIdentifier:
            type: string
            format: guid
          name:
            type: string
          tag:
            type: string
            nullable: true
          size:
            type: string
            enum: ["small", "medium", "large"]
          _links:
            type: object
            properties:
              self:
                $ref: "#/components/schemas/Link"
              image:
                $ref: "#/components/schemas/Link"
              pocoimage:
                $ref: "#/components/schemas/Link"

    PetList:
      anyOf:
      - $ref: '#/components/schemas/Resource'
      - type: object
        properties:
          totalCount:
            type: integer
            format: int64
          pageSize:
            type: integer
          _links:
            type: object
            properties:
              self:
                $ref: "#/components/schemas/Link"
              pets:
                $ref: "#/components/schemas/LinkCollection"
              create:
                $ref: "#/components/schemas/Link"
              next:
                $ref: "#/components/schemas/Link"
          _embedded:
            type: object
            properties:
              pets:
                type: array
                items:
                  $ref: "#/components/schemas/Pet"

    Link:
      type: object
      required:
        - href
      properties:
        href:
          type: string
          title: URI of the target resource
          description: Either a URI [RFC3986] or URI Template [RFC6570] of the target
            resource.
        templated:
          type: boolean
          default: false
          title: URI Template
          description: Is true when the link object's href property is a URI Template.
            Defaults to false.
        type:
          type: string
          pattern: "^(application|audio|example|image|message|model|multipart|text|video)\\/[a-zA-Z0-9!#\\$&\\.\\+-\\^_]{1,127}$"
          title: Media type indication of the target resource
          description: When present, used as a hint to indicate the media type expected
            when dereferencing the target resource.
        name:
          type: string
          title: Secondary key
          description: When present, may be used as a secondary key for selecting
            link objects that contain the same relation type.
        profile:
          type: string
          format: uri
          title: Additional semantics of the target resource
          description: A URI that, when dereferenced, results in a profile to allow
            clients to learn about additional semantics (constraints, conventions,
            extensions) that are associated with the target resource representation,
            in addition to those defined by the HAL media type and relations.
        title:
          type: string
          title: Human-readable identifier
          description: When present, is used to label the destination of a link
            such that it can be used as a human-readable identifier (e.g. a menu
            entry) in the language indicated by the Content-Language header (if
            present).
        hreflang:
          type: string
          pattern: "^([a-zA-Z]{2,3}(-[a-zA-Z]{3}(-[a-zA-Z]{3}){0,2})?(-[a-zA-Z]{4})?(-([a-zA-Z]{2}|[0-9]{3}))?(-([a-zA-Z0-9]{5,8}|[0-9][a-zA-Z0-9]{3}))*([0-9A-WY-Za-wy-z](-[a-zA-Z0-9]{2,8}){1,})*(x-[a-zA-Z0-9]{2,8})?)|(x-[a-zA-Z0-9]{2,8})|(en-GB-oed)|(i-ami)|(i-bnn)|(i-default)|(i-enochian)|(i-hak)|(i-klingon)|(i-lux)|(i-mingo)|(i-navajo)|(i-pwn)|(i-tao)|(i-tay)|(i-tsu)|(sgn-BE-FR)|(sgn-BE-NL)|(sgn-CH-DE)|(art-lojban)|(cel-gaulish)|(no-bok)|(no-nyn)|(zh-guoyu)|(zh-hakka)|(zh-min)|(zh-min-nan)|(zh-xiang)$"
          title: Language indication of the target resource [RFC5988]
          description: When present, is a hint in RFC5646 format indicating what
            the language of the result of dereferencing the link should be.  Note
            that this is only a hint; for example, it does not override the Content-Language
            header of a HTTP response obtained by actually following the link.

    LinkCollection:
      type: array
      items:
        $ref: '#/components/schemas/Link'
      uniqueItems: true
      additionalProperties: false

    Resource:
      type: object
      properties:
        _links:
          type: object
          title: Hyperlink
          description: Represents a hyperlink from the cotntaining resource to a URI.
          additionalProperties:
            oneOf:
            - $ref: '#/components/schemas/Link'
            - $ref: '#/components/schemas/LinkCollection'
        _embedded:
          type: object
          additionalProperties:
            oneOf:
            - $ref: '#/components/schemas/Resource'
            - $ref: '#/components/schemas/ResourceCollection'
      additionalProperties: true

    ResourceCollection:
      type: array
      items:      
        $ref: '#/components/schemas/Resource'
      uniqueItems: true
      additionalProperties: false

    ProblemDetails:
      required:
        - status
        - detail
      properties:
        status:
          type: integer
          format: int32
        detail:
          type: string
        title:
          type: string
        instance:
          type: string
          format: url
        type: 
          type: string
          format: url
        validationErrors: 
          type: array
        additionalProperties: true