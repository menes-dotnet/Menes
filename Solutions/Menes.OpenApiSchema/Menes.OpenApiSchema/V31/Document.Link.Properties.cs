//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Diagnostics.CodeAnalysis;
using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Menes.OpenApiSchema.V31;
public readonly partial struct Document
{
    /// <summary>
    /// A type generated from a JsonSchema specification.
    /// </summary>
    public readonly partial struct Link
    {
        /// <summary>
        /// JSON property name for <see cref = "OperationRef"/>.
        /// </summary>
        public static readonly ReadOnlyMemory<byte> OperationRefUtf8JsonPropertyName = new byte[]{111, 112, 101, 114, 97, 116, 105, 111, 110, 82, 101, 102};
        /// <summary>
        /// JSON property name for <see cref = "OperationRef"/>.
        /// </summary>
        public const string OperationRefJsonPropertyName = "operationRef";
        /// <summary>
        /// JSON property name for <see cref = "OperationId"/>.
        /// </summary>
        public static readonly ReadOnlyMemory<byte> OperationIdUtf8JsonPropertyName = new byte[]{111, 112, 101, 114, 97, 116, 105, 111, 110, 73, 100};
        /// <summary>
        /// JSON property name for <see cref = "OperationId"/>.
        /// </summary>
        public const string OperationIdJsonPropertyName = "operationId";
        /// <summary>
        /// JSON property name for <see cref = "Parameters"/>.
        /// </summary>
        public static readonly ReadOnlyMemory<byte> ParametersUtf8JsonPropertyName = new byte[]{112, 97, 114, 97, 109, 101, 116, 101, 114, 115};
        /// <summary>
        /// JSON property name for <see cref = "Parameters"/>.
        /// </summary>
        public const string ParametersJsonPropertyName = "parameters";
        /// <summary>
        /// JSON property name for <see cref = "RequestBody"/>.
        /// </summary>
        public static readonly ReadOnlyMemory<byte> RequestBodyUtf8JsonPropertyName = new byte[]{114, 101, 113, 117, 101, 115, 116, 66, 111, 100, 121};
        /// <summary>
        /// JSON property name for <see cref = "RequestBody"/>.
        /// </summary>
        public const string RequestBodyJsonPropertyName = "requestBody";
        /// <summary>
        /// JSON property name for <see cref = "Description"/>.
        /// </summary>
        public static readonly ReadOnlyMemory<byte> DescriptionUtf8JsonPropertyName = new byte[]{100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110};
        /// <summary>
        /// JSON property name for <see cref = "Description"/>.
        /// </summary>
        public const string DescriptionJsonPropertyName = "description";
        /// <summary>
        /// JSON property name for <see cref = "Body"/>.
        /// </summary>
        public static readonly ReadOnlyMemory<byte> BodyUtf8JsonPropertyName = new byte[]{98, 111, 100, 121};
        /// <summary>
        /// JSON property name for <see cref = "Body"/>.
        /// </summary>
        public const string BodyJsonPropertyName = "body";
        /// <summary>
        /// Gets OperationRef.
        /// </summary>
        public Corvus.Json.JsonUriReference OperationRef
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(OperationRefUtf8JsonPropertyName.Span, out JsonElement result))
                    {
                        return new Corvus.Json.JsonUriReference(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(OperationRefJsonPropertyName, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonUriReference>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets OperationId.
        /// </summary>
        public Corvus.Json.JsonAny OperationId
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(OperationIdUtf8JsonPropertyName.Span, out JsonElement result))
                    {
                        return new Corvus.Json.JsonAny(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(OperationIdJsonPropertyName, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonAny>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets Parameters.
        /// </summary>
        public Menes.OpenApiSchema.V31.Document.MapOfStrings Parameters
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(ParametersUtf8JsonPropertyName.Span, out JsonElement result))
                    {
                        return new Menes.OpenApiSchema.V31.Document.MapOfStrings(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(ParametersJsonPropertyName, out JsonAny result))
                    {
                        return result.As<Menes.OpenApiSchema.V31.Document.MapOfStrings>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets RequestBody.
        /// </summary>
        public Corvus.Json.JsonAny RequestBody
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(RequestBodyUtf8JsonPropertyName.Span, out JsonElement result))
                    {
                        return new Corvus.Json.JsonAny(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(RequestBodyJsonPropertyName, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonAny>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets Description.
        /// </summary>
        public Corvus.Json.JsonString Description
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(DescriptionUtf8JsonPropertyName.Span, out JsonElement result))
                    {
                        return new Corvus.Json.JsonString(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(DescriptionJsonPropertyName, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonString>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets Body.
        /// </summary>
        public Menes.OpenApiSchema.V31.Document.Server Body
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(BodyUtf8JsonPropertyName.Span, out JsonElement result))
                    {
                        return new Menes.OpenApiSchema.V31.Document.Server(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(BodyJsonPropertyName, out JsonAny result))
                    {
                        return result.As<Menes.OpenApiSchema.V31.Document.Server>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Creates an instance of a <see cref = "Link"/>.
        /// </summary>
        public static Link Create(Corvus.Json.JsonUriReference? operationRef = null, Corvus.Json.JsonAny? operationId = null, Menes.OpenApiSchema.V31.Document.MapOfStrings? parameters = null, Corvus.Json.JsonAny? requestBody = null, Corvus.Json.JsonString? description = null, Menes.OpenApiSchema.V31.Document.Server? body = null)
        {
            var builder = ImmutableDictionary.CreateBuilder<JsonPropertyName, JsonAny>();
            if (operationRef is Corvus.Json.JsonUriReference operationRef__)
            {
                builder.Add(OperationRefJsonPropertyName, operationRef__.AsAny);
            }

            if (operationId is Corvus.Json.JsonAny operationId__)
            {
                builder.Add(OperationIdJsonPropertyName, operationId__.AsAny);
            }

            if (parameters is Menes.OpenApiSchema.V31.Document.MapOfStrings parameters__)
            {
                builder.Add(ParametersJsonPropertyName, parameters__.AsAny);
            }

            if (requestBody is Corvus.Json.JsonAny requestBody__)
            {
                builder.Add(RequestBodyJsonPropertyName, requestBody__.AsAny);
            }

            if (description is Corvus.Json.JsonString description__)
            {
                builder.Add(DescriptionJsonPropertyName, description__.AsAny);
            }

            if (body is Menes.OpenApiSchema.V31.Document.Server body__)
            {
                builder.Add(BodyJsonPropertyName, body__.AsAny);
            }

            return builder.ToImmutable();
        }

        /// <summary>
        /// Sets operationRef.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Link WithOperationRef(in Corvus.Json.JsonUriReference value)
        {
            return this.SetProperty(OperationRefJsonPropertyName, value);
        }

        /// <summary>
        /// Sets operationId.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Link WithOperationId(in Corvus.Json.JsonAny value)
        {
            return this.SetProperty(OperationIdJsonPropertyName, value);
        }

        /// <summary>
        /// Sets parameters.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Link WithParameters(in Menes.OpenApiSchema.V31.Document.MapOfStrings value)
        {
            return this.SetProperty(ParametersJsonPropertyName, value);
        }

        /// <summary>
        /// Sets requestBody.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Link WithRequestBody(in Corvus.Json.JsonAny value)
        {
            return this.SetProperty(RequestBodyJsonPropertyName, value);
        }

        /// <summary>
        /// Sets description.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Link WithDescription(in Corvus.Json.JsonString value)
        {
            return this.SetProperty(DescriptionJsonPropertyName, value);
        }

        /// <summary>
        /// Sets body.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Link WithBody(in Menes.OpenApiSchema.V31.Document.Server value)
        {
            return this.SetProperty(BodyJsonPropertyName, value);
        }

        private static ValidationContext __CorvusValidateOperationRef(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonUriReference>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateOperationId(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonAny>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateParameters(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Menes.OpenApiSchema.V31.Document.MapOfStrings>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateRequestBody(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonAny>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateDescription(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
        }

        private static ValidationContext __CorvusValidateBody(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Menes.OpenApiSchema.V31.Document.Server>().Validate(validationContext, level);
        }

        /// <summary>
        /// Tries to get the validator for the given property.
        /// </summary>
        /// <param name = "property">The property for which to get the validator.</param>
        /// <param name = "hasJsonElementBacking"><c>True</c> if the object containing the property has a JsonElement backing.</param>
        /// <param name = "propertyValidator">The validator for the property, if provided by this schema.</param>
        /// <returns><c>True</c> if the validator was found.</returns>
        private bool __TryGetCorvusLocalPropertiesValidator(in JsonObjectProperty property, bool hasJsonElementBacking, [NotNullWhen(true)] out ObjectPropertyValidator? propertyValidator)
        {
            if (hasJsonElementBacking)
            {
                if (property.NameEquals(OperationRefUtf8JsonPropertyName.Span))
                {
                    propertyValidator = __CorvusValidateOperationRef;
                    return true;
                }
                else if (property.NameEquals(OperationIdUtf8JsonPropertyName.Span))
                {
                    propertyValidator = __CorvusValidateOperationId;
                    return true;
                }
                else if (property.NameEquals(ParametersUtf8JsonPropertyName.Span))
                {
                    propertyValidator = __CorvusValidateParameters;
                    return true;
                }
                else if (property.NameEquals(RequestBodyUtf8JsonPropertyName.Span))
                {
                    propertyValidator = __CorvusValidateRequestBody;
                    return true;
                }
                else if (property.NameEquals(DescriptionUtf8JsonPropertyName.Span))
                {
                    propertyValidator = __CorvusValidateDescription;
                    return true;
                }
                else if (property.NameEquals(BodyUtf8JsonPropertyName.Span))
                {
                    propertyValidator = __CorvusValidateBody;
                    return true;
                }
            }
            else
            {
                if (property.NameEquals(OperationRefJsonPropertyName))
                {
                    propertyValidator = __CorvusValidateOperationRef;
                    return true;
                }
                else if (property.NameEquals(OperationIdJsonPropertyName))
                {
                    propertyValidator = __CorvusValidateOperationId;
                    return true;
                }
                else if (property.NameEquals(ParametersJsonPropertyName))
                {
                    propertyValidator = __CorvusValidateParameters;
                    return true;
                }
                else if (property.NameEquals(RequestBodyJsonPropertyName))
                {
                    propertyValidator = __CorvusValidateRequestBody;
                    return true;
                }
                else if (property.NameEquals(DescriptionJsonPropertyName))
                {
                    propertyValidator = __CorvusValidateDescription;
                    return true;
                }
                else if (property.NameEquals(BodyJsonPropertyName))
                {
                    propertyValidator = __CorvusValidateBody;
                    return true;
                }
            }

            propertyValidator = null;
            return false;
        }
    }
}