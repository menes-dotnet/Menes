//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Diagnostics.CodeAnalysis;
using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Menes.OpenApiSchema.V31;
public readonly partial struct Document
{
    public readonly partial struct Parameter
    {
        /// <summary>
        /// A type generated from a JsonSchema specification.
        /// </summary>
        public readonly partial struct SchemaEntity
        {
            /// <summary>
            /// JSON property name for <see cref = "Style"/>.
            /// </summary>
            public static readonly ReadOnlyMemory<byte> StyleUtf8JsonPropertyName = new byte[]{115, 116, 121, 108, 101};
            /// <summary>
            /// JSON property name for <see cref = "Style"/>.
            /// </summary>
            public const string StyleJsonPropertyName = "style";
            /// <summary>
            /// JSON property name for <see cref = "Required"/>.
            /// </summary>
            public static readonly ReadOnlyMemory<byte> RequiredUtf8JsonPropertyName = new byte[]{114, 101, 113, 117, 105, 114, 101, 100};
            /// <summary>
            /// JSON property name for <see cref = "Required"/>.
            /// </summary>
            public const string RequiredJsonPropertyName = "required";
            /// <summary>
            /// JSON property name for <see cref = "Name"/>.
            /// </summary>
            public static readonly ReadOnlyMemory<byte> NameUtf8JsonPropertyName = new byte[]{110, 97, 109, 101};
            /// <summary>
            /// JSON property name for <see cref = "Name"/>.
            /// </summary>
            public const string NameJsonPropertyName = "name";
            /// <summary>
            /// JSON property name for <see cref = "AllowReserved"/>.
            /// </summary>
            public static readonly ReadOnlyMemory<byte> AllowReservedUtf8JsonPropertyName = new byte[]{97, 108, 108, 111, 119, 82, 101, 115, 101, 114, 118, 101, 100};
            /// <summary>
            /// JSON property name for <see cref = "AllowReserved"/>.
            /// </summary>
            public const string AllowReservedJsonPropertyName = "allowReserved";
            /// <summary>
            /// JSON property name for <see cref = "Example"/>.
            /// </summary>
            public static readonly ReadOnlyMemory<byte> ExampleUtf8JsonPropertyName = new byte[]{101, 120, 97, 109, 112, 108, 101};
            /// <summary>
            /// JSON property name for <see cref = "Example"/>.
            /// </summary>
            public const string ExampleJsonPropertyName = "example";
            /// <summary>
            /// JSON property name for <see cref = "Examples"/>.
            /// </summary>
            public static readonly ReadOnlyMemory<byte> ExamplesUtf8JsonPropertyName = new byte[]{101, 120, 97, 109, 112, 108, 101, 115};
            /// <summary>
            /// JSON property name for <see cref = "Examples"/>.
            /// </summary>
            public const string ExamplesJsonPropertyName = "examples";
            /// <summary>
            /// JSON property name for <see cref = "Explode"/>.
            /// </summary>
            public static readonly ReadOnlyMemory<byte> ExplodeUtf8JsonPropertyName = new byte[]{101, 120, 112, 108, 111, 100, 101};
            /// <summary>
            /// JSON property name for <see cref = "Explode"/>.
            /// </summary>
            public const string ExplodeJsonPropertyName = "explode";
            /// <summary>
            /// Gets Style.
            /// </summary>
            public Corvus.Json.JsonString Style
            {
                get
                {
                    if ((this.backing & Backing.JsonElement) != 0)
                    {
                        if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                        {
                            return default;
                        }

                        if (this.jsonElementBacking.TryGetProperty(StyleUtf8JsonPropertyName.Span, out JsonElement result))
                        {
                            return new Corvus.Json.JsonString(result);
                        }
                    }

                    if ((this.backing & Backing.Object) != 0)
                    {
                        if (this.objectBacking.TryGetValue(StyleJsonPropertyName, out JsonAny result))
                        {
                            return result.As<Corvus.Json.JsonString>();
                        }
                    }

                    return default;
                }
            }

            /// <summary>
            /// Gets Required.
            /// </summary>
            public Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.RequiredEntity Required
            {
                get
                {
                    if ((this.backing & Backing.JsonElement) != 0)
                    {
                        if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                        {
                            return default;
                        }

                        if (this.jsonElementBacking.TryGetProperty(RequiredUtf8JsonPropertyName.Span, out JsonElement result))
                        {
                            return new Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.RequiredEntity(result);
                        }
                    }

                    if ((this.backing & Backing.Object) != 0)
                    {
                        if (this.objectBacking.TryGetValue(RequiredJsonPropertyName, out JsonAny result))
                        {
                            return result.As<Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.RequiredEntity>();
                        }
                    }

                    return default;
                }
            }

            /// <summary>
            /// Gets Name.
            /// </summary>
            public Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.NameEntity Name
            {
                get
                {
                    if ((this.backing & Backing.JsonElement) != 0)
                    {
                        if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                        {
                            return default;
                        }

                        if (this.jsonElementBacking.TryGetProperty(NameUtf8JsonPropertyName.Span, out JsonElement result))
                        {
                            return new Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.NameEntity(result);
                        }
                    }

                    if ((this.backing & Backing.Object) != 0)
                    {
                        if (this.objectBacking.TryGetValue(NameJsonPropertyName, out JsonAny result))
                        {
                            return result.As<Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.NameEntity>();
                        }
                    }

                    return default;
                }
            }

            /// <summary>
            /// Gets AllowReserved.
            /// </summary>
            public Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForQueryEntity.ThenEntity.AllowReservedEntity AllowReserved
            {
                get
                {
                    if ((this.backing & Backing.JsonElement) != 0)
                    {
                        if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                        {
                            return default;
                        }

                        if (this.jsonElementBacking.TryGetProperty(AllowReservedUtf8JsonPropertyName.Span, out JsonElement result))
                        {
                            return new Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForQueryEntity.ThenEntity.AllowReservedEntity(result);
                        }
                    }

                    if ((this.backing & Backing.Object) != 0)
                    {
                        if (this.objectBacking.TryGetValue(AllowReservedJsonPropertyName, out JsonAny result))
                        {
                            return result.As<Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForQueryEntity.ThenEntity.AllowReservedEntity>();
                        }
                    }

                    return default;
                }
            }

            /// <summary>
            /// Gets Example.
            /// </summary>
            public Corvus.Json.JsonAny Example
            {
                get
                {
                    if ((this.backing & Backing.JsonElement) != 0)
                    {
                        if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                        {
                            return default;
                        }

                        if (this.jsonElementBacking.TryGetProperty(ExampleUtf8JsonPropertyName.Span, out JsonElement result))
                        {
                            return new Corvus.Json.JsonAny(result);
                        }
                    }

                    if ((this.backing & Backing.Object) != 0)
                    {
                        if (this.objectBacking.TryGetValue(ExampleJsonPropertyName, out JsonAny result))
                        {
                            return result.As<Corvus.Json.JsonAny>();
                        }
                    }

                    return default;
                }
            }

            /// <summary>
            /// Gets Examples.
            /// </summary>
            public Menes.OpenApiSchema.V31.Document.Examples.ExamplesEntity Examples
            {
                get
                {
                    if ((this.backing & Backing.JsonElement) != 0)
                    {
                        if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                        {
                            return default;
                        }

                        if (this.jsonElementBacking.TryGetProperty(ExamplesUtf8JsonPropertyName.Span, out JsonElement result))
                        {
                            return new Menes.OpenApiSchema.V31.Document.Examples.ExamplesEntity(result);
                        }
                    }

                    if ((this.backing & Backing.Object) != 0)
                    {
                        if (this.objectBacking.TryGetValue(ExamplesJsonPropertyName, out JsonAny result))
                        {
                            return result.As<Menes.OpenApiSchema.V31.Document.Examples.ExamplesEntity>();
                        }
                    }

                    return default;
                }
            }

            /// <summary>
            /// Gets Explode.
            /// </summary>
            public Corvus.Json.JsonBoolean Explode
            {
                get
                {
                    if ((this.backing & Backing.JsonElement) != 0)
                    {
                        if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                        {
                            return default;
                        }

                        if (this.jsonElementBacking.TryGetProperty(ExplodeUtf8JsonPropertyName.Span, out JsonElement result))
                        {
                            return new Corvus.Json.JsonBoolean(result);
                        }
                    }

                    if ((this.backing & Backing.Object) != 0)
                    {
                        if (this.objectBacking.TryGetValue(ExplodeJsonPropertyName, out JsonAny result))
                        {
                            return result.As<Corvus.Json.JsonBoolean>();
                        }
                    }

                    return default;
                }
            }

            /// <summary>
            /// Creates an instance of a <see cref = "SchemaEntity"/>.
            /// </summary>
            public static SchemaEntity Create(Corvus.Json.JsonString? style = null, Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.RequiredEntity? required = null, Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.NameEntity? name = null, Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForQueryEntity.ThenEntity.AllowReservedEntity? allowReserved = null, Corvus.Json.JsonAny? example = null, Menes.OpenApiSchema.V31.Document.Examples.ExamplesEntity? examples = null, Corvus.Json.JsonBoolean? explode = null)
            {
                var builder = ImmutableDictionary.CreateBuilder<JsonPropertyName, JsonAny>();
                if (style is Corvus.Json.JsonString style__)
                {
                    builder.Add(StyleJsonPropertyName, style__.AsAny);
                }

                if (required is Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.RequiredEntity required__)
                {
                    builder.Add(RequiredJsonPropertyName, required__.AsAny);
                }

                if (name is Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.NameEntity name__)
                {
                    builder.Add(NameJsonPropertyName, name__.AsAny);
                }

                if (allowReserved is Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForQueryEntity.ThenEntity.AllowReservedEntity allowReserved__)
                {
                    builder.Add(AllowReservedJsonPropertyName, allowReserved__.AsAny);
                }

                if (example is Corvus.Json.JsonAny example__)
                {
                    builder.Add(ExampleJsonPropertyName, example__.AsAny);
                }

                if (examples is Menes.OpenApiSchema.V31.Document.Examples.ExamplesEntity examples__)
                {
                    builder.Add(ExamplesJsonPropertyName, examples__.AsAny);
                }

                if (explode is Corvus.Json.JsonBoolean explode__)
                {
                    builder.Add(ExplodeJsonPropertyName, explode__.AsAny);
                }

                return builder.ToImmutable();
            }

            /// <summary>
            /// Sets style.
            /// </summary>
            /// <param name = "value">The value to set.</param>
            /// <returns>The entity with the updated property.</returns>
            public SchemaEntity WithStyle(in Corvus.Json.JsonString value)
            {
                return this.SetProperty(StyleJsonPropertyName, value);
            }

            /// <summary>
            /// Sets name.
            /// </summary>
            /// <param name = "value">The value to set.</param>
            /// <returns>The entity with the updated property.</returns>
            public SchemaEntity WithName(in Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.NameEntity value)
            {
                return this.SetProperty(NameJsonPropertyName, value);
            }

            /// <summary>
            /// Sets allowReserved.
            /// </summary>
            /// <param name = "value">The value to set.</param>
            /// <returns>The entity with the updated property.</returns>
            public SchemaEntity WithAllowReserved(in Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForQueryEntity.ThenEntity.AllowReservedEntity value)
            {
                return this.SetProperty(AllowReservedJsonPropertyName, value);
            }

            /// <summary>
            /// Sets example.
            /// </summary>
            /// <param name = "value">The value to set.</param>
            /// <returns>The entity with the updated property.</returns>
            public SchemaEntity WithExample(in Corvus.Json.JsonAny value)
            {
                return this.SetProperty(ExampleJsonPropertyName, value);
            }

            /// <summary>
            /// Sets examples.
            /// </summary>
            /// <param name = "value">The value to set.</param>
            /// <returns>The entity with the updated property.</returns>
            public SchemaEntity WithExamples(in Menes.OpenApiSchema.V31.Document.Examples.ExamplesEntity value)
            {
                return this.SetProperty(ExamplesJsonPropertyName, value);
            }

            /// <summary>
            /// Sets explode.
            /// </summary>
            /// <param name = "value">The value to set.</param>
            /// <returns>The entity with the updated property.</returns>
            public SchemaEntity WithExplode(in Corvus.Json.JsonBoolean value)
            {
                return this.SetProperty(ExplodeJsonPropertyName, value);
            }

            private static ValidationContext __CorvusValidateStyle(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
            {
                return property.ValueAs<Corvus.Json.JsonString>().Validate(validationContext, level);
            }

            private static ValidationContext __CorvusValidateExplode(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
            {
                return property.ValueAs<Corvus.Json.JsonBoolean>().Validate(validationContext, level);
            }

            /// <summary>
            /// Tries to get the validator for the given property.
            /// </summary>
            /// <param name = "property">The property for which to get the validator.</param>
            /// <param name = "hasJsonElementBacking"><c>True</c> if the object containing the property has a JsonElement backing.</param>
            /// <param name = "propertyValidator">The validator for the property, if provided by this schema.</param>
            /// <returns><c>True</c> if the validator was found.</returns>
            private bool __TryGetCorvusLocalPropertiesValidator(in JsonObjectProperty property, bool hasJsonElementBacking, [NotNullWhen(true)] out ObjectPropertyValidator? propertyValidator)
            {
                if (hasJsonElementBacking)
                {
                    if (property.NameEquals(StyleUtf8JsonPropertyName.Span))
                    {
                        propertyValidator = __CorvusValidateStyle;
                        return true;
                    }
                    else if (property.NameEquals(ExplodeUtf8JsonPropertyName.Span))
                    {
                        propertyValidator = __CorvusValidateExplode;
                        return true;
                    }
                }
                else
                {
                    if (property.NameEquals(StyleJsonPropertyName))
                    {
                        propertyValidator = __CorvusValidateStyle;
                        return true;
                    }
                    else if (property.NameEquals(ExplodeJsonPropertyName))
                    {
                        propertyValidator = __CorvusValidateExplode;
                        return true;
                    }
                }

                propertyValidator = null;
                return false;
            }
        }
    }
}