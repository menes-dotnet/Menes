//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Diagnostics.CodeAnalysis;
using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Menes.OpenApiSchema.V31;
public readonly partial struct Document
{
    /// <summary>
    /// A type generated from a JsonSchema specification.
    /// </summary>
    public readonly partial struct Responses
    {
        /// <summary>
        /// JSON property name for <see cref = "Default"/>.
        /// </summary>
        public static readonly ReadOnlyMemory<byte> DefaultUtf8JsonPropertyName = new byte[]{100, 101, 102, 97, 117, 108, 116};
        /// <summary>
        /// JSON property name for <see cref = "Default"/>.
        /// </summary>
        public const string DefaultJsonPropertyName = "default";
        /// <summary>
        /// Gets Default.
        /// </summary>
        public Menes.OpenApiSchema.V31.Document.ResponseOrReference Default
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(DefaultUtf8JsonPropertyName.Span, out JsonElement result))
                    {
                        return new Menes.OpenApiSchema.V31.Document.ResponseOrReference(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(DefaultJsonPropertyName, out JsonAny result))
                    {
                        return result.As<Menes.OpenApiSchema.V31.Document.ResponseOrReference>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Creates an instance of a <see cref = "Responses"/>.
        /// </summary>
        public static Responses Create(Menes.OpenApiSchema.V31.Document.ResponseOrReference? @default = null)
        {
            var builder = ImmutableDictionary.CreateBuilder<JsonPropertyName, JsonAny>();
            if (@default is Menes.OpenApiSchema.V31.Document.ResponseOrReference @default__)
            {
                builder.Add(DefaultJsonPropertyName, @default__.AsAny);
            }

            return builder.ToImmutable();
        }

        /// <summary>
        /// Sets default.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public Responses WithDefault(in Menes.OpenApiSchema.V31.Document.ResponseOrReference value)
        {
            return this.SetProperty(DefaultJsonPropertyName, value);
        }

        private static ValidationContext __CorvusValidateDefault(in JsonObjectProperty property, in ValidationContext validationContext, ValidationLevel level)
        {
            return property.ValueAs<Menes.OpenApiSchema.V31.Document.ResponseOrReference>().Validate(validationContext, level);
        }

        /// <summary>
        /// Tries to get the validator for the given property.
        /// </summary>
        /// <param name = "property">The property for which to get the validator.</param>
        /// <param name = "hasJsonElementBacking"><c>True</c> if the object containing the property has a JsonElement backing.</param>
        /// <param name = "propertyValidator">The validator for the property, if provided by this schema.</param>
        /// <returns><c>True</c> if the validator was found.</returns>
        private bool __TryGetCorvusLocalPropertiesValidator(in JsonObjectProperty property, bool hasJsonElementBacking, [NotNullWhen(true)] out ObjectPropertyValidator? propertyValidator)
        {
            if (hasJsonElementBacking)
            {
                if (property.NameEquals(DefaultUtf8JsonPropertyName.Span))
                {
                    propertyValidator = __CorvusValidateDefault;
                    return true;
                }
            }
            else
            {
                if (property.NameEquals(DefaultJsonPropertyName))
                {
                    propertyValidator = __CorvusValidateDefault;
                    return true;
                }
            }

            propertyValidator = null;
            return false;
        }
    }
}