//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Diagnostics.CodeAnalysis;
using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Menes.OpenApiSchema.V31;
public readonly partial struct Document
{
    public readonly partial struct Parameter
    {
        public readonly partial struct SchemaEntity
        {
            /// <summary>
            /// A type generated from a JsonSchema specification.
            /// </summary>
            public readonly partial struct StylesForPathEntity
            {
                /// <summary>
                /// JSON property name for <see cref = "Required"/>.
                /// </summary>
                public static readonly ReadOnlyMemory<byte> RequiredUtf8JsonPropertyName = new byte[]{114, 101, 113, 117, 105, 114, 101, 100};
                /// <summary>
                /// JSON property name for <see cref = "Required"/>.
                /// </summary>
                public const string RequiredJsonPropertyName = "required";
                /// <summary>
                /// JSON property name for <see cref = "Name"/>.
                /// </summary>
                public static readonly ReadOnlyMemory<byte> NameUtf8JsonPropertyName = new byte[]{110, 97, 109, 101};
                /// <summary>
                /// JSON property name for <see cref = "Name"/>.
                /// </summary>
                public const string NameJsonPropertyName = "name";
                /// <summary>
                /// JSON property name for <see cref = "Style"/>.
                /// </summary>
                public static readonly ReadOnlyMemory<byte> StyleUtf8JsonPropertyName = new byte[]{115, 116, 121, 108, 101};
                /// <summary>
                /// JSON property name for <see cref = "Style"/>.
                /// </summary>
                public const string StyleJsonPropertyName = "style";
                /// <summary>
                /// Gets Required.
                /// </summary>
                public Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.RequiredEntity Required
                {
                    get
                    {
                        if ((this.backing & Backing.JsonElement) != 0)
                        {
                            if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                            {
                                return default;
                            }

                            if (this.jsonElementBacking.TryGetProperty(RequiredUtf8JsonPropertyName.Span, out JsonElement result))
                            {
                                return new Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.RequiredEntity(result);
                            }
                        }

                        if ((this.backing & Backing.Object) != 0)
                        {
                            if (this.objectBacking.TryGetValue(RequiredJsonPropertyName, out JsonAny result))
                            {
                                return result.As<Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.RequiredEntity>();
                            }
                        }

                        return default;
                    }
                }

                /// <summary>
                /// Gets Name.
                /// </summary>
                public Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.NameEntity Name
                {
                    get
                    {
                        if ((this.backing & Backing.JsonElement) != 0)
                        {
                            if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                            {
                                return default;
                            }

                            if (this.jsonElementBacking.TryGetProperty(NameUtf8JsonPropertyName.Span, out JsonElement result))
                            {
                                return new Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.NameEntity(result);
                            }
                        }

                        if ((this.backing & Backing.Object) != 0)
                        {
                            if (this.objectBacking.TryGetValue(NameJsonPropertyName, out JsonAny result))
                            {
                                return result.As<Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.NameEntity>();
                            }
                        }

                        return default;
                    }
                }

                /// <summary>
                /// Gets Style.
                /// </summary>
                public Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.StyleEntity Style
                {
                    get
                    {
                        if ((this.backing & Backing.JsonElement) != 0)
                        {
                            if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                            {
                                return default;
                            }

                            if (this.jsonElementBacking.TryGetProperty(StyleUtf8JsonPropertyName.Span, out JsonElement result))
                            {
                                return new Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.StyleEntity(result);
                            }
                        }

                        if ((this.backing & Backing.Object) != 0)
                        {
                            if (this.objectBacking.TryGetValue(StyleJsonPropertyName, out JsonAny result))
                            {
                                return result.As<Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.StyleEntity>();
                            }
                        }

                        return default;
                    }
                }

                /// <summary>
                /// Creates an instance of a <see cref = "StylesForPathEntity"/>.
                /// </summary>
                public static StylesForPathEntity Create(Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.RequiredEntity? required = null, Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.NameEntity? name = null, Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.StyleEntity? style = null)
                {
                    var builder = ImmutableDictionary.CreateBuilder<JsonPropertyName, JsonAny>();
                    if (required is Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.RequiredEntity required__)
                    {
                        builder.Add(RequiredJsonPropertyName, required__.AsAny);
                    }

                    if (name is Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.NameEntity name__)
                    {
                        builder.Add(NameJsonPropertyName, name__.AsAny);
                    }

                    if (style is Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.StyleEntity style__)
                    {
                        builder.Add(StyleJsonPropertyName, style__.AsAny);
                    }

                    return builder.ToImmutable();
                }

                /// <summary>
                /// Sets name.
                /// </summary>
                /// <param name = "value">The value to set.</param>
                /// <returns>The entity with the updated property.</returns>
                public StylesForPathEntity WithName(in Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.NameEntity value)
                {
                    return this.SetProperty(NameJsonPropertyName, value);
                }

                /// <summary>
                /// Sets style.
                /// </summary>
                /// <param name = "value">The value to set.</param>
                /// <returns>The entity with the updated property.</returns>
                public StylesForPathEntity WithStyle(in Menes.OpenApiSchema.V31.Document.Parameter.SchemaEntity.StylesForPathEntity.ThenEntity.StyleEntity value)
                {
                    return this.SetProperty(StyleJsonPropertyName, value);
                }

                /// <summary>
                /// Tries to get the validator for the given property.
                /// </summary>
                /// <param name = "property">The property for which to get the validator.</param>
                /// <param name = "hasJsonElementBacking"><c>True</c> if the object containing the property has a JsonElement backing.</param>
                /// <param name = "propertyValidator">The validator for the property, if provided by this schema.</param>
                /// <returns><c>True</c> if the validator was found.</returns>
                private bool __TryGetCorvusLocalPropertiesValidator(in JsonObjectProperty property, bool hasJsonElementBacking, [NotNullWhen(true)] out ObjectPropertyValidator? propertyValidator)
                {
                    if (hasJsonElementBacking)
                    {
                    }
                    else
                    {
                    }

                    propertyValidator = null;
                    return false;
                }
            }
        }
    }
}