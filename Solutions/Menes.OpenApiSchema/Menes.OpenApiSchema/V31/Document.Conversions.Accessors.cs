//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using Corvus.Json;

namespace Menes.OpenApiSchema.V31;
/// <summary>
/// A type generated from a JsonSchema specification.
/// </summary>
public readonly partial struct Document
{
    /// <summary>
    /// Gets the value as a <see cref = "Menes.OpenApiSchema.V31.Document.AnyOf0Entity"/>.
    /// </summary>
    public Menes.OpenApiSchema.V31.Document.AnyOf0Entity AsAnyOf0Entity
    {
        get
        {
            return (Menes.OpenApiSchema.V31.Document.AnyOf0Entity)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Menes.OpenApiSchema.V31.Document.AnyOf0Entity"/>.
    /// </summary>
    public bool IsAnyOf0Entity
    {
        get
        {
            return ((Menes.OpenApiSchema.V31.Document.AnyOf0Entity)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Menes.OpenApiSchema.V31.Document.AnyOf0Entity"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsAnyOf0Entity(out Menes.OpenApiSchema.V31.Document.AnyOf0Entity result)
    {
        result = (Menes.OpenApiSchema.V31.Document.AnyOf0Entity)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Menes.OpenApiSchema.V31.Document.AnyOf1Entity"/>.
    /// </summary>
    public Menes.OpenApiSchema.V31.Document.AnyOf1Entity AsAnyOf1Entity
    {
        get
        {
            return (Menes.OpenApiSchema.V31.Document.AnyOf1Entity)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Menes.OpenApiSchema.V31.Document.AnyOf1Entity"/>.
    /// </summary>
    public bool IsAnyOf1Entity
    {
        get
        {
            return ((Menes.OpenApiSchema.V31.Document.AnyOf1Entity)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Menes.OpenApiSchema.V31.Document.AnyOf1Entity"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsAnyOf1Entity(out Menes.OpenApiSchema.V31.Document.AnyOf1Entity result)
    {
        result = (Menes.OpenApiSchema.V31.Document.AnyOf1Entity)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Menes.OpenApiSchema.V31.Document.AnyOf2Entity"/>.
    /// </summary>
    public Menes.OpenApiSchema.V31.Document.AnyOf2Entity AsAnyOf2Entity
    {
        get
        {
            return (Menes.OpenApiSchema.V31.Document.AnyOf2Entity)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Menes.OpenApiSchema.V31.Document.AnyOf2Entity"/>.
    /// </summary>
    public bool IsAnyOf2Entity
    {
        get
        {
            return ((Menes.OpenApiSchema.V31.Document.AnyOf2Entity)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Menes.OpenApiSchema.V31.Document.AnyOf2Entity"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsAnyOf2Entity(out Menes.OpenApiSchema.V31.Document.AnyOf2Entity result)
    {
        result = (Menes.OpenApiSchema.V31.Document.AnyOf2Entity)this;
        return result.IsValid();
    }

    /// <summary>
    /// Gets the value as a <see cref = "Menes.OpenApiSchema.V31.Document.SpecificationExtensions"/>.
    /// </summary>
    public Menes.OpenApiSchema.V31.Document.SpecificationExtensions AsSpecificationExtensions
    {
        get
        {
            return (Menes.OpenApiSchema.V31.Document.SpecificationExtensions)this;
        }
    }

    /// <summary>
    /// Gets a value indicating whether this is a valid <see cref = "Menes.OpenApiSchema.V31.Document.SpecificationExtensions"/>.
    /// </summary>
    public bool IsSpecificationExtensions
    {
        get
        {
            return ((Menes.OpenApiSchema.V31.Document.SpecificationExtensions)this).IsValid();
        }
    }

    /// <summary>
    /// Gets the value as a <see cref = "Menes.OpenApiSchema.V31.Document.SpecificationExtensions"/>.
    /// </summary>
    /// <param name = "result">The result of the conversion.</param>
    /// <returns><c>True</c> if the conversion was valid.</returns>
    public bool TryGetAsSpecificationExtensions(out Menes.OpenApiSchema.V31.Document.SpecificationExtensions result)
    {
        result = (Menes.OpenApiSchema.V31.Document.SpecificationExtensions)this;
        return result.IsValid();
    }
}