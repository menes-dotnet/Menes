//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Menes.OpenApiSchema.V31;
/// <summary>
/// A type generated from a JsonSchema specification.
/// </summary>
public readonly partial struct Document
{
    /// <summary>
    /// Conversion from <see cref = "Menes.OpenApiSchema.V31.Document.AnyOf0Entity"/>.
    /// </summary>
    /// <param name = "value">The value from which to convert.</param>
    public static implicit operator Document(Menes.OpenApiSchema.V31.Document.AnyOf0Entity value)
    {
        if (value.HasJsonElementBacking)
        {
            return new(value.AsJsonElement);
        }

        return value.ValueKind switch
        {
            JsonValueKind.Object => new((ImmutableDictionary<JsonPropertyName, JsonAny>)value),
            _ => Undefined
        };
    }

    /// <summary>
    /// Conversion to <see cref = "Menes.OpenApiSchema.V31.Document.AnyOf0Entity"/>.
    /// </summary>
    /// <param name = "value">The value from which to convert.</param>
    public static implicit operator Menes.OpenApiSchema.V31.Document.AnyOf0Entity(Document value)
    {
        if ((value.backing & Backing.JsonElement) != 0)
        {
            return new(value.AsJsonElement);
        }

        if ((value.backing & Backing.Object) != 0)
        {
            return new(value.objectBacking);
        }

        return Menes.OpenApiSchema.V31.Document.AnyOf0Entity.Undefined;
    }

    /// <summary>
    /// Conversion from <see cref = "Menes.OpenApiSchema.V31.Document.AnyOf1Entity"/>.
    /// </summary>
    /// <param name = "value">The value from which to convert.</param>
    public static implicit operator Document(Menes.OpenApiSchema.V31.Document.AnyOf1Entity value)
    {
        if (value.HasJsonElementBacking)
        {
            return new(value.AsJsonElement);
        }

        return value.ValueKind switch
        {
            JsonValueKind.Object => new((ImmutableDictionary<JsonPropertyName, JsonAny>)value),
            _ => Undefined
        };
    }

    /// <summary>
    /// Conversion to <see cref = "Menes.OpenApiSchema.V31.Document.AnyOf1Entity"/>.
    /// </summary>
    /// <param name = "value">The value from which to convert.</param>
    public static implicit operator Menes.OpenApiSchema.V31.Document.AnyOf1Entity(Document value)
    {
        if ((value.backing & Backing.JsonElement) != 0)
        {
            return new(value.AsJsonElement);
        }

        if ((value.backing & Backing.Object) != 0)
        {
            return new(value.objectBacking);
        }

        return Menes.OpenApiSchema.V31.Document.AnyOf1Entity.Undefined;
    }

    /// <summary>
    /// Conversion from <see cref = "Menes.OpenApiSchema.V31.Document.AnyOf2Entity"/>.
    /// </summary>
    /// <param name = "value">The value from which to convert.</param>
    public static implicit operator Document(Menes.OpenApiSchema.V31.Document.AnyOf2Entity value)
    {
        if (value.HasJsonElementBacking)
        {
            return new(value.AsJsonElement);
        }

        return value.ValueKind switch
        {
            JsonValueKind.Object => new((ImmutableDictionary<JsonPropertyName, JsonAny>)value),
            _ => Undefined
        };
    }

    /// <summary>
    /// Conversion to <see cref = "Menes.OpenApiSchema.V31.Document.AnyOf2Entity"/>.
    /// </summary>
    /// <param name = "value">The value from which to convert.</param>
    public static implicit operator Menes.OpenApiSchema.V31.Document.AnyOf2Entity(Document value)
    {
        if ((value.backing & Backing.JsonElement) != 0)
        {
            return new(value.AsJsonElement);
        }

        if ((value.backing & Backing.Object) != 0)
        {
            return new(value.objectBacking);
        }

        return Menes.OpenApiSchema.V31.Document.AnyOf2Entity.Undefined;
    }

    /// <summary>
    /// Conversion from <see cref = "Menes.OpenApiSchema.V31.Document.SpecificationExtensions"/>.
    /// </summary>
    /// <param name = "value">The value from which to convert.</param>
    public static implicit operator Document(Menes.OpenApiSchema.V31.Document.SpecificationExtensions value)
    {
        if (value.HasJsonElementBacking)
        {
            return new(value.AsJsonElement);
        }

        return value.ValueKind switch
        {
            JsonValueKind.Object => new((ImmutableDictionary<JsonPropertyName, JsonAny>)value),
            _ => Undefined
        };
    }

    /// <summary>
    /// Conversion to <see cref = "Menes.OpenApiSchema.V31.Document.SpecificationExtensions"/>.
    /// </summary>
    /// <param name = "value">The value from which to convert.</param>
    public static implicit operator Menes.OpenApiSchema.V31.Document.SpecificationExtensions(Document value)
    {
        if ((value.backing & Backing.JsonElement) != 0)
        {
            return new(value.AsJsonElement);
        }

        if ((value.backing & Backing.Object) != 0)
        {
            return new(value.objectBacking);
        }

        return Menes.OpenApiSchema.V31.Document.SpecificationExtensions.Undefined;
    }
}