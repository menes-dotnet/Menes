//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#nullable enable
using System.Collections.Immutable;
using System.Diagnostics.CodeAnalysis;
using System.Runtime.CompilerServices;
using System.Text.Json;
using Corvus.Json;
using Corvus.Json.Internal;

namespace Menes.OpenApiSchema.V31;
public readonly partial struct Document
{
    /// <summary>
    /// A type generated from a JsonSchema specification.
    /// </summary>
    public readonly partial struct HeaderOrReference
    {
        /// <summary>
        /// JSON property name for <see cref = "Ref"/>.
        /// </summary>
        public static readonly ReadOnlyMemory<byte> RefUtf8JsonPropertyName = new byte[]{36, 114, 101, 102};
        /// <summary>
        /// JSON property name for <see cref = "Ref"/>.
        /// </summary>
        public const string RefJsonPropertyName = "$ref";
        /// <summary>
        /// JSON property name for <see cref = "Summary"/>.
        /// </summary>
        public static readonly ReadOnlyMemory<byte> SummaryUtf8JsonPropertyName = new byte[]{115, 117, 109, 109, 97, 114, 121};
        /// <summary>
        /// JSON property name for <see cref = "Summary"/>.
        /// </summary>
        public const string SummaryJsonPropertyName = "summary";
        /// <summary>
        /// JSON property name for <see cref = "Description"/>.
        /// </summary>
        public static readonly ReadOnlyMemory<byte> DescriptionUtf8JsonPropertyName = new byte[]{100, 101, 115, 99, 114, 105, 112, 116, 105, 111, 110};
        /// <summary>
        /// JSON property name for <see cref = "Description"/>.
        /// </summary>
        public const string DescriptionJsonPropertyName = "description";
        /// <summary>
        /// JSON property name for <see cref = "Example"/>.
        /// </summary>
        public static readonly ReadOnlyMemory<byte> ExampleUtf8JsonPropertyName = new byte[]{101, 120, 97, 109, 112, 108, 101};
        /// <summary>
        /// JSON property name for <see cref = "Example"/>.
        /// </summary>
        public const string ExampleJsonPropertyName = "example";
        /// <summary>
        /// JSON property name for <see cref = "Examples"/>.
        /// </summary>
        public static readonly ReadOnlyMemory<byte> ExamplesUtf8JsonPropertyName = new byte[]{101, 120, 97, 109, 112, 108, 101, 115};
        /// <summary>
        /// JSON property name for <see cref = "Examples"/>.
        /// </summary>
        public const string ExamplesJsonPropertyName = "examples";
        /// <summary>
        /// JSON property name for <see cref = "Style"/>.
        /// </summary>
        public static readonly ReadOnlyMemory<byte> StyleUtf8JsonPropertyName = new byte[]{115, 116, 121, 108, 101};
        /// <summary>
        /// JSON property name for <see cref = "Style"/>.
        /// </summary>
        public const string StyleJsonPropertyName = "style";
        /// <summary>
        /// JSON property name for <see cref = "Explode"/>.
        /// </summary>
        public static readonly ReadOnlyMemory<byte> ExplodeUtf8JsonPropertyName = new byte[]{101, 120, 112, 108, 111, 100, 101};
        /// <summary>
        /// JSON property name for <see cref = "Explode"/>.
        /// </summary>
        public const string ExplodeJsonPropertyName = "explode";
        /// <summary>
        /// JSON property name for <see cref = "Required"/>.
        /// </summary>
        public static readonly ReadOnlyMemory<byte> RequiredUtf8JsonPropertyName = new byte[]{114, 101, 113, 117, 105, 114, 101, 100};
        /// <summary>
        /// JSON property name for <see cref = "Required"/>.
        /// </summary>
        public const string RequiredJsonPropertyName = "required";
        /// <summary>
        /// JSON property name for <see cref = "Deprecated"/>.
        /// </summary>
        public static readonly ReadOnlyMemory<byte> DeprecatedUtf8JsonPropertyName = new byte[]{100, 101, 112, 114, 101, 99, 97, 116, 101, 100};
        /// <summary>
        /// JSON property name for <see cref = "Deprecated"/>.
        /// </summary>
        public const string DeprecatedJsonPropertyName = "deprecated";
        /// <summary>
        /// JSON property name for <see cref = "Schema"/>.
        /// </summary>
        public static readonly ReadOnlyMemory<byte> SchemaUtf8JsonPropertyName = new byte[]{115, 99, 104, 101, 109, 97};
        /// <summary>
        /// JSON property name for <see cref = "Schema"/>.
        /// </summary>
        public const string SchemaJsonPropertyName = "schema";
        /// <summary>
        /// JSON property name for <see cref = "Content"/>.
        /// </summary>
        public static readonly ReadOnlyMemory<byte> ContentUtf8JsonPropertyName = new byte[]{99, 111, 110, 116, 101, 110, 116};
        /// <summary>
        /// JSON property name for <see cref = "Content"/>.
        /// </summary>
        public const string ContentJsonPropertyName = "content";
        /// <summary>
        /// Gets Ref.
        /// </summary>
        public Corvus.Json.JsonUriReference Ref
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(RefUtf8JsonPropertyName.Span, out JsonElement result))
                    {
                        return new Corvus.Json.JsonUriReference(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(RefJsonPropertyName, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonUriReference>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets Summary.
        /// </summary>
        public Corvus.Json.JsonString Summary
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(SummaryUtf8JsonPropertyName.Span, out JsonElement result))
                    {
                        return new Corvus.Json.JsonString(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(SummaryJsonPropertyName, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonString>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets Description.
        /// </summary>
        public Corvus.Json.JsonString Description
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(DescriptionUtf8JsonPropertyName.Span, out JsonElement result))
                    {
                        return new Corvus.Json.JsonString(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(DescriptionJsonPropertyName, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonString>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets Example.
        /// </summary>
        public Corvus.Json.JsonAny Example
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(ExampleUtf8JsonPropertyName.Span, out JsonElement result))
                    {
                        return new Corvus.Json.JsonAny(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(ExampleJsonPropertyName, out JsonAny result))
                    {
                        return result.As<Corvus.Json.JsonAny>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets Examples.
        /// </summary>
        public Menes.OpenApiSchema.V31.Document.Examples.ExamplesEntity Examples
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(ExamplesUtf8JsonPropertyName.Span, out JsonElement result))
                    {
                        return new Menes.OpenApiSchema.V31.Document.Examples.ExamplesEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(ExamplesJsonPropertyName, out JsonAny result))
                    {
                        return result.As<Menes.OpenApiSchema.V31.Document.Examples.ExamplesEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets Style.
        /// </summary>
        public Menes.OpenApiSchema.V31.Document.Header.SchemaEntity.StyleEntity Style
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(StyleUtf8JsonPropertyName.Span, out JsonElement result))
                    {
                        return new Menes.OpenApiSchema.V31.Document.Header.SchemaEntity.StyleEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(StyleJsonPropertyName, out JsonAny result))
                    {
                        return result.As<Menes.OpenApiSchema.V31.Document.Header.SchemaEntity.StyleEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets Explode.
        /// </summary>
        public Menes.OpenApiSchema.V31.Document.Header.SchemaEntity.ExplodeEntity Explode
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(ExplodeUtf8JsonPropertyName.Span, out JsonElement result))
                    {
                        return new Menes.OpenApiSchema.V31.Document.Header.SchemaEntity.ExplodeEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(ExplodeJsonPropertyName, out JsonAny result))
                    {
                        return result.As<Menes.OpenApiSchema.V31.Document.Header.SchemaEntity.ExplodeEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets Required.
        /// </summary>
        public Menes.OpenApiSchema.V31.Document.Header.RequiredEntity Required
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(RequiredUtf8JsonPropertyName.Span, out JsonElement result))
                    {
                        return new Menes.OpenApiSchema.V31.Document.Header.RequiredEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(RequiredJsonPropertyName, out JsonAny result))
                    {
                        return result.As<Menes.OpenApiSchema.V31.Document.Header.RequiredEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets Deprecated.
        /// </summary>
        public Menes.OpenApiSchema.V31.Document.Header.DeprecatedEntity Deprecated
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(DeprecatedUtf8JsonPropertyName.Span, out JsonElement result))
                    {
                        return new Menes.OpenApiSchema.V31.Document.Header.DeprecatedEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(DeprecatedJsonPropertyName, out JsonAny result))
                    {
                        return result.As<Menes.OpenApiSchema.V31.Document.Header.DeprecatedEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets Schema.
        /// </summary>
        public Menes.OpenApiSchema.V31.Document.Schema Schema
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(SchemaUtf8JsonPropertyName.Span, out JsonElement result))
                    {
                        return new Menes.OpenApiSchema.V31.Document.Schema(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(SchemaJsonPropertyName, out JsonAny result))
                    {
                        return result.As<Menes.OpenApiSchema.V31.Document.Schema>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Gets Content.
        /// </summary>
        public Menes.OpenApiSchema.V31.Document.Header.ContentEntity Content
        {
            get
            {
                if ((this.backing & Backing.JsonElement) != 0)
                {
                    if (this.jsonElementBacking.ValueKind != JsonValueKind.Object)
                    {
                        return default;
                    }

                    if (this.jsonElementBacking.TryGetProperty(ContentUtf8JsonPropertyName.Span, out JsonElement result))
                    {
                        return new Menes.OpenApiSchema.V31.Document.Header.ContentEntity(result);
                    }
                }

                if ((this.backing & Backing.Object) != 0)
                {
                    if (this.objectBacking.TryGetValue(ContentJsonPropertyName, out JsonAny result))
                    {
                        return result.As<Menes.OpenApiSchema.V31.Document.Header.ContentEntity>();
                    }
                }

                return default;
            }
        }

        /// <summary>
        /// Creates an instance of a <see cref = "HeaderOrReference"/>.
        /// </summary>
        public static HeaderOrReference Create(Corvus.Json.JsonUriReference? @ref = null, Corvus.Json.JsonString? summary = null, Corvus.Json.JsonString? description = null, Corvus.Json.JsonAny? example = null, Menes.OpenApiSchema.V31.Document.Examples.ExamplesEntity? examples = null, Menes.OpenApiSchema.V31.Document.Header.SchemaEntity.StyleEntity? style = null, Menes.OpenApiSchema.V31.Document.Header.SchemaEntity.ExplodeEntity? explode = null, Menes.OpenApiSchema.V31.Document.Header.RequiredEntity? required = null, Menes.OpenApiSchema.V31.Document.Header.DeprecatedEntity? deprecated = null, Menes.OpenApiSchema.V31.Document.Schema? schema = null, Menes.OpenApiSchema.V31.Document.Header.ContentEntity? content = null)
        {
            var builder = ImmutableDictionary.CreateBuilder<JsonPropertyName, JsonAny>();
            if (@ref is Corvus.Json.JsonUriReference @ref__)
            {
                builder.Add(RefJsonPropertyName, @ref__.AsAny);
            }

            if (summary is Corvus.Json.JsonString summary__)
            {
                builder.Add(SummaryJsonPropertyName, summary__.AsAny);
            }

            if (description is Corvus.Json.JsonString description__)
            {
                builder.Add(DescriptionJsonPropertyName, description__.AsAny);
            }

            if (example is Corvus.Json.JsonAny example__)
            {
                builder.Add(ExampleJsonPropertyName, example__.AsAny);
            }

            if (examples is Menes.OpenApiSchema.V31.Document.Examples.ExamplesEntity examples__)
            {
                builder.Add(ExamplesJsonPropertyName, examples__.AsAny);
            }

            if (style is Menes.OpenApiSchema.V31.Document.Header.SchemaEntity.StyleEntity style__)
            {
                builder.Add(StyleJsonPropertyName, style__.AsAny);
            }

            if (explode is Menes.OpenApiSchema.V31.Document.Header.SchemaEntity.ExplodeEntity explode__)
            {
                builder.Add(ExplodeJsonPropertyName, explode__.AsAny);
            }

            if (required is Menes.OpenApiSchema.V31.Document.Header.RequiredEntity required__)
            {
                builder.Add(RequiredJsonPropertyName, required__.AsAny);
            }

            if (deprecated is Menes.OpenApiSchema.V31.Document.Header.DeprecatedEntity deprecated__)
            {
                builder.Add(DeprecatedJsonPropertyName, deprecated__.AsAny);
            }

            if (schema is Menes.OpenApiSchema.V31.Document.Schema schema__)
            {
                builder.Add(SchemaJsonPropertyName, schema__.AsAny);
            }

            if (content is Menes.OpenApiSchema.V31.Document.Header.ContentEntity content__)
            {
                builder.Add(ContentJsonPropertyName, content__.AsAny);
            }

            return builder.ToImmutable();
        }

        /// <summary>
        /// Sets $ref.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public HeaderOrReference WithRef(in Corvus.Json.JsonUriReference value)
        {
            return this.SetProperty(RefJsonPropertyName, value);
        }

        /// <summary>
        /// Sets summary.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public HeaderOrReference WithSummary(in Corvus.Json.JsonString value)
        {
            return this.SetProperty(SummaryJsonPropertyName, value);
        }

        /// <summary>
        /// Sets description.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public HeaderOrReference WithDescription(in Corvus.Json.JsonString value)
        {
            return this.SetProperty(DescriptionJsonPropertyName, value);
        }

        /// <summary>
        /// Sets example.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public HeaderOrReference WithExample(in Corvus.Json.JsonAny value)
        {
            return this.SetProperty(ExampleJsonPropertyName, value);
        }

        /// <summary>
        /// Sets examples.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public HeaderOrReference WithExamples(in Menes.OpenApiSchema.V31.Document.Examples.ExamplesEntity value)
        {
            return this.SetProperty(ExamplesJsonPropertyName, value);
        }

        /// <summary>
        /// Sets explode.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public HeaderOrReference WithExplode(in Menes.OpenApiSchema.V31.Document.Header.SchemaEntity.ExplodeEntity value)
        {
            return this.SetProperty(ExplodeJsonPropertyName, value);
        }

        /// <summary>
        /// Sets required.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public HeaderOrReference WithRequired(in Menes.OpenApiSchema.V31.Document.Header.RequiredEntity value)
        {
            return this.SetProperty(RequiredJsonPropertyName, value);
        }

        /// <summary>
        /// Sets deprecated.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public HeaderOrReference WithDeprecated(in Menes.OpenApiSchema.V31.Document.Header.DeprecatedEntity value)
        {
            return this.SetProperty(DeprecatedJsonPropertyName, value);
        }

        /// <summary>
        /// Sets schema.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public HeaderOrReference WithSchema(in Menes.OpenApiSchema.V31.Document.Schema value)
        {
            return this.SetProperty(SchemaJsonPropertyName, value);
        }

        /// <summary>
        /// Sets content.
        /// </summary>
        /// <param name = "value">The value to set.</param>
        /// <returns>The entity with the updated property.</returns>
        public HeaderOrReference WithContent(in Menes.OpenApiSchema.V31.Document.Header.ContentEntity value)
        {
            return this.SetProperty(ContentJsonPropertyName, value);
        }

        /// <summary>
        /// Tries to get the validator for the given property.
        /// </summary>
        /// <param name = "property">The property for which to get the validator.</param>
        /// <param name = "hasJsonElementBacking"><c>True</c> if the object containing the property has a JsonElement backing.</param>
        /// <param name = "propertyValidator">The validator for the property, if provided by this schema.</param>
        /// <returns><c>True</c> if the validator was found.</returns>
        private bool __TryGetCorvusLocalPropertiesValidator(in JsonObjectProperty property, bool hasJsonElementBacking, [NotNullWhen(true)] out ObjectPropertyValidator? propertyValidator)
        {
            if (hasJsonElementBacking)
            {
            }
            else
            {
            }

            propertyValidator = null;
            return false;
        }
    }
}