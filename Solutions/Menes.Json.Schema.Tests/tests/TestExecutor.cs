// <copyright file="TestExecutor.cs" company="Endjin Limited">
// Copyright (c) Endjin Limited. All rights reserved.
// </copyright>
#pragma warning disable
namespace Menes.Json.Schema.Tests
{

public static class TestExecutor
{
    public static int executedCount = 0;
    public static int ignoredCount = 0;
    public static int passedCount = 0;
    public static int failedCount = 0;
    public static void ExecuteTests()
    {
executedCount++;
if(AdditionalItems000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalItems000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalItems001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalItems002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalItems002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalItems002.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalItems002.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalItems002.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalItems003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalItems003.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalItems004.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalItems005.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalItems006.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalProperties000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalProperties000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalProperties000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalProperties000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalProperties000.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalProperties000.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalProperties001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalProperties001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalProperties002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalProperties002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalProperties002.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalProperties003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalProperties003.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalProperties004.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AdditionalProperties005.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf001.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf001.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf004.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf005.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf006.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf007.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf008.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf008.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf009.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf009.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf010.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf010.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf011.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf011.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf011.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf011.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf011.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf011.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf011.Tests.Test6())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AllOf011.Tests.Test7())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Anchor000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Anchor000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Anchor001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Anchor001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Anchor002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Anchor002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AnyOf000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AnyOf000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AnyOf000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AnyOf000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AnyOf001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AnyOf001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AnyOf001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AnyOf002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AnyOf003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AnyOf004.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AnyOf005.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AnyOf005.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AnyOf005.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AnyOf005.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AnyOf006.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AnyOf006.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AnyOf007.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(AnyOf007.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(BooleanSchema000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(BooleanSchema000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(BooleanSchema000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(BooleanSchema000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(BooleanSchema000.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(BooleanSchema000.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(BooleanSchema000.Tests.Test6())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(BooleanSchema000.Tests.Test7())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(BooleanSchema000.Tests.Test8())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(BooleanSchema001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(BooleanSchema001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(BooleanSchema001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(BooleanSchema001.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(BooleanSchema001.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(BooleanSchema001.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(BooleanSchema001.Tests.Test6())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(BooleanSchema001.Tests.Test7())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(BooleanSchema001.Tests.Test8())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const001.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const002.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const003.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const004.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const004.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const004.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const005.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const005.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const005.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const006.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const006.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const006.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const007.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const007.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const007.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const008.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const008.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const008.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const009.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const009.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const009.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const010.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const010.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const010.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const010.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const010.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const010.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const011.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const011.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const011.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const012.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const012.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const012.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const012.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const012.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const013.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const013.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const013.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const013.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const014.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Const014.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Contains000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Contains000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Contains000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Contains000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Contains000.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Contains000.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Contains001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Contains001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Contains001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Contains002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Contains002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Contains003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Contains003.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Contains003.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Contains004.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Contains004.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Contains004.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Contains004.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Default000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Default000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Default001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Default001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Defs000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Defs001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentRequired000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentRequired000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentRequired000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentRequired000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentRequired000.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentRequired000.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentRequired000.Tests.Test6())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentRequired001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentRequired001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentRequired001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentRequired002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentRequired002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentRequired002.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentRequired002.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentRequired002.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentRequired002.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentRequired003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentRequired003.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentRequired003.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentRequired003.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentSchemas000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentSchemas000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentSchemas000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentSchemas000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentSchemas000.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentSchemas001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentSchemas001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentSchemas001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentSchemas001.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentSchemas002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentSchemas002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentSchemas002.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(DependentSchemas002.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum001.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum001.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum002.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum003.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum003.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum003.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum003.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum003.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum004.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum004.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum004.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum005.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum005.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum005.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum006.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum006.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum006.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum007.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum007.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum007.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum008.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum008.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum008.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum009.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Enum009.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(ExclusiveMaximum000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(ExclusiveMaximum000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(ExclusiveMaximum000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(ExclusiveMaximum000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(ExclusiveMinimum000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(ExclusiveMinimum000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(ExclusiveMinimum000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(ExclusiveMinimum000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format000.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format000.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format001.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format001.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format001.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format002.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format002.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format002.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format002.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format003.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format003.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format003.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format003.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format003.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format004.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format004.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format004.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format004.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format004.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format004.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format005.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format005.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format005.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format005.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format005.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format005.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format006.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format006.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format006.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format006.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format006.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format006.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format007.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format007.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format007.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format007.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format007.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format007.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format008.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format008.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format008.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format008.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format008.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format008.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format009.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format009.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format009.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format009.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format009.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format009.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format010.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format010.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format010.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format010.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format010.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format010.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format011.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format011.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format011.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format011.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format011.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format011.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format012.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format012.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format012.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format012.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format012.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format012.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format013.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format013.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format013.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format013.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format013.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format013.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format014.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format014.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format014.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format014.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format014.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format014.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format015.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format015.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format015.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format015.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format015.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format015.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format016.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format016.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format016.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format016.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format016.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format016.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format017.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format017.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format017.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format017.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format017.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format017.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format018.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format018.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format018.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format018.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format018.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Format018.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Id000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Id000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Id000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Id000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Id000.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Id000.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Id000.Tests.Test6())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Id001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Id001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Id002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Id002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Id002.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Id002.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse003.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse003.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse004.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse004.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse004.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse005.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse005.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse005.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse005.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse006.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse006.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse007.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse007.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse008.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse008.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse009.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse009.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse009.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(IfThenElse009.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items001.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items001.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items001.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items003.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items004.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items004.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items004.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items005.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items005.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items005.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items005.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items005.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items005.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items006.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items006.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Items006.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxContains000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxContains000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxContains001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxContains001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxContains001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxContains001.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxContains001.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxContains002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxContains002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxContains002.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Maximum000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Maximum000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Maximum000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Maximum000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Maximum001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Maximum001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Maximum001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Maximum001.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxItems000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxItems000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxItems000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxItems000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxLength000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxLength000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxLength000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxLength000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxLength000.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxProperties000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxProperties000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxProperties000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxProperties000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxProperties000.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxProperties000.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxProperties001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MaxProperties001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains001.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains001.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains002.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains002.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains002.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains002.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains003.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains003.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains003.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains004.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains004.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains004.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains004.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains005.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinContains005.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Minimum000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Minimum000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Minimum000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Minimum000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Minimum001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Minimum001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Minimum001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Minimum001.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Minimum001.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Minimum001.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Minimum001.Tests.Test6())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinItems000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinItems000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinItems000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinItems000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinLength000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinLength000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinLength000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinLength000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinLength000.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinProperties000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinProperties000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinProperties000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinProperties000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinProperties000.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MinProperties000.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MultipleOf000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MultipleOf000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MultipleOf000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MultipleOf001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MultipleOf001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MultipleOf001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MultipleOf002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MultipleOf002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(MultipleOf003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Not000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Not000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Not001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Not001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Not001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Not002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Not002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Not002.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Not003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Not003.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Not004.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Not005.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf004.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf005.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf006.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf006.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf006.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf006.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf007.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf007.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf008.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf008.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf008.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf008.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf009.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf009.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf009.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf009.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf010.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(OneOf010.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Pattern000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Pattern000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Pattern000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Pattern000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Pattern000.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Pattern000.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Pattern000.Tests.Test6())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Pattern000.Tests.Test7())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Pattern001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties000.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties000.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties000.Tests.Test6())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties001.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties001.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties001.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties002.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties002.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties003.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties003.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties003.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PatternProperties003.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Properties000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Properties000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Properties000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Properties000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Properties000.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Properties000.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Properties001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Properties001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Properties001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Properties001.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Properties001.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Properties001.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Properties001.Tests.Test6())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Properties001.Tests.Test7())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Properties002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Properties002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Properties002.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Properties002.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Properties003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Properties003.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PropertyNames000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PropertyNames000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PropertyNames000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PropertyNames000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PropertyNames000.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PropertyNames000.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PropertyNames001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PropertyNames001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PropertyNames002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(PropertyNames002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref003.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref003.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref003.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref003.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref003.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref004.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref004.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref005.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref005.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref005.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref006.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref006.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref007.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref007.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref008.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref008.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref009.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref010.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref011.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref011.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref012.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref012.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Ref013.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(RefRemote000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(RefRemote000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(RefRemote001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(RefRemote001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(RefRemote002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(RefRemote002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(RefRemote003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(RefRemote003.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(RefRemote004.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(RefRemote004.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
ignoredCount++;
ignoredCount++;
executedCount++;
if(RefRemote006.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(RefRemote006.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(RefRemote006.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Required000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Required000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Required000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Required000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Required000.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Required001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Required002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Required003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Required003.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type000.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type000.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type000.Tests.Test6())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type000.Tests.Test7())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type000.Tests.Test8())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type001.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type001.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type001.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type001.Tests.Test6())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type001.Tests.Test7())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type001.Tests.Test8())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type002.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type002.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type002.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type002.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type002.Tests.Test6())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type002.Tests.Test7())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type002.Tests.Test8())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type003.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type003.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type003.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type003.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type003.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type003.Tests.Test6())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type004.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type004.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type004.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type004.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type004.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type004.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type004.Tests.Test6())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type005.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type005.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type005.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type005.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type005.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type005.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type005.Tests.Test6())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type005.Tests.Test7())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type005.Tests.Test8())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type005.Tests.Test9())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type006.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type006.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type006.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type006.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type006.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type006.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type006.Tests.Test6())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type006.Tests.Test7())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type006.Tests.Test8())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type006.Tests.Test9())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type007.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type007.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type007.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type007.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type007.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type007.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type007.Tests.Test6())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type008.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type008.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type009.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type009.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type009.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type009.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type009.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type010.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type010.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type010.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type010.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(Type010.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems002.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems004.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems004.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems005.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems006.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems006.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems007.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems007.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems008.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems008.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems009.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems009.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems009.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems009.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems010.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems010.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems011.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems012.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems012.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems012.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems012.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems013.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems013.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems014.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems014.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedItems015.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties003.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties004.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties004.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties005.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties005.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties006.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties006.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties007.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties007.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties008.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties008.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties009.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties009.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties010.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties010.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties010.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties010.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties011.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties011.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties012.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties013.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties013.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties013.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties013.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties014.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties014.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties015.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties015.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties016.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties016.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties017.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties018.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties018.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties019.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties019.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties020.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties020.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties021.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties021.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties022.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties022.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties023.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UnevaluatedProperties023.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test6())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test7())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test8())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test9())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test10())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test11())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test12())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test13())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test14())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test15())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test16())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test17())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test18())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test19())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test20())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test21())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems000.Tests.Test22())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems001.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems001.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems001.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems001.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems001.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems001.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems001.Tests.Test6())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems001.Tests.Test7())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems002.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems002.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems002.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems002.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems002.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems003.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems003.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems003.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems003.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems003.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems003.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems003.Tests.Test6())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems003.Tests.Test7())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems003.Tests.Test8())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems003.Tests.Test9())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems003.Tests.Test10())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems003.Tests.Test11())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems003.Tests.Test12())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems003.Tests.Test13())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems003.Tests.Test14())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems004.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems004.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems004.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems004.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems004.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems004.Tests.Test5())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems004.Tests.Test6())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems004.Tests.Test7())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems005.Tests.Test0())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems005.Tests.Test1())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems005.Tests.Test2())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems005.Tests.Test3())
{
    passedCount++;
}
else
{
    failedCount++;
}
executedCount++;
if(UniqueItems005.Tests.Test4())
{
    passedCount++;
}
else
{
    failedCount++;
}
System.Console.WriteLine($"Total: {executedCount + ignoredCount} Executed: {executedCount} Passed: {passedCount} Failed: {failedCount} Ignored: {ignoredCount}");
    }
}
}
